@import "_variables.scss";

.action-bar {
  min-height: inherit;
  .navbar-toggle {
    border-color: transparent;
    margin: 0 5px 0 0;
    .fa-bars {
      position: relative;
      left: -15px;
      margin-right: -10px;
      padding: 0;
      padding-top: 2px;
      transition: left 0.35s ease;
      color: #FFF;
    }
    .logo {
      width: 32px;
      height: 32px;
      margin-right: 5px;
      background: url("../img/givit-logo-32x32-transparent.png");
    }
    .navbar-brand {
      padding: 0;
      padding-top: 7px;
    }
  }
}

.nav-drawer {
  &.fadeInLeft {
    animation-duration: 0.4s;
  }
  &.fadeOutLeft {
    animation-duration: 0.2s;
  }
  display: none;
  @media (max-width: $nav-drawer-breakpoint - 1) {
    white-space: nowrap;
    position: absolute;
    max-height: none;
    height: auto;
    overflow-x: hidden;
    height: 1000px;
    //need to find out how to set this to the screen height
    box-shadow: 3px 3px 5px 0px rgba(0, 0, 0, 0.75);
    padding: 0;
    &.collapsing {
      overflow-y: auto;
    }
  }
  @media (min-width: $nav-drawer-breakpoint) {
    // !important needed to override the inline width style set by collapsing the navigation drawer
    // without this, if the browser is resized up after collapsing, it breaks the nav
    width: inherit !important;
  }
  .navbar-nav {
    @media (max-width: $nav-drawer-breakpoint - 1) {
      background: white;
      width: 240px;
      //need to find out how to set this to the screen width
      height: 100%;
      margin: 0 0 0 -15px;
      padding-left: 15px;
    }
    > li {
      &.user-details {
        > a {
          @media (min-width: $nav-drawer-breakpoint) {
            padding-top: 5px;
            padding-bottom: 5px;
            .user-email {
              display: none;
            }
            .user-name {
              padding-top: 10px;
            }
          }
        }
        img {
          margin-right: 15px;
          border-radius: 50%;
          margin-right: 5px;
          @media (min-width: $nav-drawer-breakpoint) {
            height: 40px;
          }
        }
      }
      &.active > a {
        &, &:hover, &:focus {
          font-weight: bold;
          background-color: inherit;
          color: inherit;
        }
      }
      > a {
        padding-top: 15px;
        padding-bottom: 15px;
        @media (max-width: $nav-drawer-breakpoint - 1) {
          border-bottom: 1px solid #eee;
        }
      }
    }
  }
}

// prevent non-collapsed nav

@media (max-width: $nav-drawer-breakpoint - 1) {
  .navbar-toggle {
    display: inherit;
  }
  .navbar-header {
    float: inherit;
  }
  .navbar-fixed-top, .navbar-fixed-bottom {
    border-radius: inherit;
  }
  .navbar-collapse.collapse {
    display: none !important;
    height: inherit !important;
    padding-bottom: inherit;
    overflow: inherit !important;
  }
  .navbar-nav {
    float: inherit;
    margin: inherit;
    > li {
      float: inherit;
    }
  }
}

.nav-drawer-overlay {
  &.fadeIn {
    animation-duration: 0.4s;
  }
  &.fadeOut {
    animation-duration: 0.2s;
  }
  background-color: rgba(0, 0, 0, 0.2);
  display: none;
  z-index: 0;
}